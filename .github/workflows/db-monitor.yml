name: Database Performance Monitor

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:  # Allow manual trigger

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run database monitoring
        run: npm run db:monitor
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
          
      - name: Run database stats
        run: npm run db:stats
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          
      - name: Check for performance issues
        run: |
          if grep -q "Slow Queries Detected" db-monitor.log || \
             grep -q "Low Cache Hit Ratio Detected" db-monitor.log || \
             grep -q "Large Tables Detected" db-monitor.log || \
             grep -q "Unused Indexes Detected" db-monitor.log; then
            echo "Performance issues detected. Check the logs for details."
            exit 1
          fi
          
      - name: Create issue if performance issues found
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const logContent = fs.readFileSync('db-monitor.log', 'utf8');
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Database Performance Issues Detected',
              body: `## Database Performance Issues\n\n\`\`\`\n${logContent}\n\`\`\`\n\nPlease review the database performance metrics and take necessary actions.`
            }); 